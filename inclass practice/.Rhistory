) ->libraryData
minMaxFun2 <-function(x){
max(x) ->maxNumber
min(x) ->minNumber
paste0("最大值":"maxNumber","最小值":",minNumber") ->
result
return(result)
}
minMaxFun3 <-function(x){
max(x) ->maxNumber
min(x) ->minNumber
paste0("最大值":"maxNumber","最小值":",minNumber")
return(maxNumber)
}
minMaxFun4 <- function(x){
max(x)-> maxNumber
min(x)-> minNumber
print(
paste0("最大值： ",maxNumber, " 最小值： ",minNumber)
)
return(maxNumber)
}
minMaxFun4(libraryData$讀者借閱冊數)-> a1
a1
!is.numeric(libraryData$學號)
!is.numeric(libraryData$書籍類別)
not_numeric<- function(x){
!is.numeric(x)
}
not_numeric<- function(x){
!is.numeric(x) -> result
return(result)
}
not_numeric(libraryData$學號)
(libraryData$學院=="人文學院")-> logIndex
libraryData[logIndex,]-> subsample
(libraryData$學院=="社會科學院")-> logIndex
libraryData[logIndex,]-> subsample
findMyCollege<-function(x){
(libraryData$學院==x)-> logIndex
libraryData[logIndex,]-> subsample
return(subsample)
}
## grouping
findMyCollege("人文學院")-> sample1
## group feature summary
nrow(sample1)
findMyCollege("社會科學院") -> sample2
nrow(sample2)
libraryData %>%
group_by(學院) %>%
summarise(
學院借閱冊數=length(學號)
)
libraryData %>%
select(讀者借閱冊數,書籍出版日期) %>%
summarise(
讀者平均借閱冊數=mean(讀者借閱冊數),
最小書籍出版日期=min(書籍出版日期),
最大書籍出版日期=max(書籍出版日期)
)
libraryData %>%
select(讀者借閱冊數,書籍出版日期) %>%
summarise(
讀者平均借閱冊數=mean(讀者借閱冊數),
最小書籍出版日期=min(書籍出版日期,na.rm=T),
最大書籍出版日期=max(書籍出版日期,na.rm=T)
)
library(summarytools)
libraryData %>%
select_if(
is.numeric
) %>% summarytools::dfSummary() %>% summarytools::view(.)
(libraryData$書籍出版日期=="1199")%>%
which(.)%>%libraryData[.,]
libraryData$書籍館藏地 <-
as.factor (libraryData$書籍館藏地)
levels(libraryData$書籍館藏地) ->
storageLocations
i<-2
# 1
storageLocation_i <- storageLocations[i]
# 2
numericalIndexForSubsample<-which(libraryData$書籍館藏地==storageLocation_i)
subsample_i <- libraryData[numericalIndexForSubsample,]
# 3
borrowCount_i <- nrow(subsample_i)
# 0
allBorrowCount <- vector("numeric",18)
for(i in c(1:18)){
# 1
storageLocation_i <- storageLocations[i]
# 2
numericalIndexForSubsample<-which(libraryData$書籍館藏地==storageLocation_i)
subsample_i <- libraryData[numericalIndexForSubsample,]
# 3
borrowCount_i <- nrow(subsample_i)
# 4
allBorrowCount[[i]]<-borrowCount_i
}
names(allBorrowCount) <- storageLocations
libraryData$學院 %>% as.factor %>% levels -> college
#0
collegeBorrowCount <- vector("numeric",length(college))
for(i in c(1:length(college))){
#1
college_i <- college[i]
#2
numericalIndexForSubsample<-which(libraryData$學院 == college_i)
collegesubsample_i <- libraryData[numericalIndexForSubsample,]
#3
collegeBorrowCount_i <- nrow(collegesubsample_i)
#4
collegeBorrowCount[[i]]<-collegeBorrowCount_i
}
libraryData$學院 %>% as.factor %>% levels -> college
#0
collegeBorrowCount <- vector("numeric",length(college))
for(i in c(1:length(college))){
#1
college_i <- college[i]
#2
numericalIndexForSubsample<-which(libraryData$學院 == college_i)
collegesubsample_i <- libraryData[numericalIndexForSubsample,]
#3
collegeBorrowCount_i <- nrow(collegesubsample_i)
#4
collegeBorrowCount[[i]]<-collegeBorrowCount_i
}
libraryData$學院 %>% as.factor %>% levels -> college
collegeBorrowCount[[i]]<-collegeBorrowCount_i
libraryData$學號 %>% as.factor %>% levels -> student
libraryData$學號 %>% unique -> student
#0
studentBorrow <- vector("numeric", length(student))
for(i in c(1:length(student))){
# 1
student_i <- student[i]
# 2
numericalIndex <- which(libraryData$學號 == student_i)
studentSubsample_i <- libraryData[numericalIndex,]
# 3
studentBorrow_i <- nrow(studentSubsample_i)
# 4
studentBorrow[[i]] <- studentBorrow_i
}
ans<-0
for(i in 1:10){
newlyAdded<-i
ans<-ans+newlyAdded
}
libraryData$學院 %>% as.factor %>% levels -> college
#0
collegeBorrowCount <- vector("numeric",length(college))
for(i in c(1:length(college))){
for(i in seq_along(college)){
#1
college_i <- college[i]
#2
studentBorrow[[i]] <- studentBorrow_i
libraryData %>%
mutate(
學系=str_sub(學號,5,6)
## 相當於 libraryData$學系 <- str_sub(libraryData$學號,5,6)
) -> libraryData
libraryData %>%
group_by(書籍館藏地) %>%
summarise(
borrowCount=length(學號)
) -> result
result
libraryData$學院 %>% as.factor %>% levels -> college
#0
collegeBorrowCount <- vector("numeric",length(college))
for(i in c(1:length(college))){
for(i in seq_along(college)){
#1
college_i <- college[i]
#2
studentBorrow[[i]] <- studentBorrow_i
libraryData$學院 %>% as.factor %>% levels -> college
#0
collegeBorrowCount <- vector("numeric",length(college))
for(i in c(1:length(college))){
for(i in seq_along(college)){
#1
college_i <- college[i]
#2
studentBorrow[[i]] <- studentBorrow_i
#0
collegeBorrowCount <- vector("numeric",length(college))
for(i in c(1:length(college))){
for(i in seq_along(college)){
#1
college_i <- college[i]
#2
studentBorrow[[i]] <- studentBorrow_i
libraryData %>%
group_by(學院,入學年) %>%
summarise(
borrowCount=length(學號)
) -> result2
result2
libraryData %>%
mutate(
借閱時間=ymd_hms(借閱時間,tz="Asia/Taipei")
) %>%
group_by(學號) %>%
summarise(
第一次借書=min(借閱時間)
) %>%
ungroup -> result3
result3
knitr::opts_chunk$set(echo = TRUE)
library(dplyr); library(stringr); library(lubridate); library(purrr)
library(readr)
transcriptData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcript100_102.csv",
col_types = cols(
學期成績="n"
))
View(transcriptData)
subsample$學期成績 >= 60 -> subsample$及格 # 1
transcriptData$學號==edfeQ7fb8
subsample$學期成績 >= 60 -> subsample$及格 # 1
transcriptData$學號=="edfeQ7fb8""
transcriptData$學號=="edfeQ7fb8"
knitr::opts_chunk$set(echo = TRUE)
library(dplyr); library(stringr); library(lubridate); library(purrr)
transcriptData$學號=="edfeQ7fb8"
library(readr)
transcriptData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcript100_102.csv",
col_types = cols(
學期成績="n"
))
transcriptData$學號=="edfeQ7fb8"
View(transcriptData)
subsample$學期成績 >= 60 -> subsample$及格 # 1
transcriptData$學號=="edfeQ7fb8",] ->subsample
transcriptData[transcriptData$學號=="edfeQ7fb8",] ->subsample
subsample
knitr::opts_chunk$set(echo = TRUE)
library(dplyr); library(stringr); library(lubridate); library(purrr)
library(readr)
transcriptData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcript100_102.csv",
col_types = cols(
學期成績="n"
))
transcriptData[transcriptData$學號=="edfeQ7fb8",] ->subsample
subsample
subsample$學期成績 >= 60 -> subsample$及格 # 1
總修習學分數=sum(subsample$學分數) # 2
總實得學分數=sum(subsample$學分數[subsample$及格]) #3
subsample%>%
mutate(
及格=學期成績>=60
) ->subsample
subsample%>%
summarise(
總修習學分數=sum(學分數)
總實得學分數=sum(學分數[subsample$及格])
knitr::opts_chunk$set(echo = TRUE)
library(dplyr); library(stringr); library(lubridate); library(purrr)
library(readr)
transcriptData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcript100_102.csv",
col_types = cols(
學期成績="n"
))
transcriptData[transcriptData$學號=="edfeQ7fb8",] ->subsample
subsample
subsample$學期成績 >= 60 -> subsample$及格 # 1
總修習學分數=sum(subsample$學分數) # 2
總實得學分數=sum(subsample$學分數[subsample$及格]) #3
knitr::opts_chunk$set(echo = TRUE)
library(dplyr); library(stringr); library(lubridate); library(purrr)
library(readr)
transcriptData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcript100_102.csv",
col_types = cols(
學期成績="n"
))
transcriptData[transcriptData$學號=="edfeQ7fb8",] ->subsample
subsample
subsample$學期成績 >= 60 -> subsample$及格 # 1
總修習學分數=sum(subsample$學分數) # 2
總實得學分數=sum(subsample$學分數[subsample$及格]) #3
subsample%>%
mutate(
及格=學期成績>=60
) ->subsample
subsample%>%
summarise(
總修習學分數=sum(學分數)
總實得學分數=sum(學分數[subsample$及格])
subsample%>%
mutate(
及格=學期成績>=60
) ->subsample
subsample%>%
summarise(
總修習學分數=sum(學分數)
總實得學分數=sum(學分數[subsample$及格])
as.factor(subsample$學號) ->subsample$學號
subsample%>%
summarise(
總修習學分數=sum(學分數)
總實得學分數=sum(學分數[subsample$及格]),
transcriptData%>%
mutate(
系別=str_sub(學號,5,6)
) ->transcriptData
knitr::opts_chunk$set(echo = TRUE)
library(dplyr); library(stringr); library(lubridate); library(purrr)
library(readr)
transcriptData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcript100_102.csv",
col_types = cols(
學期成績="n"
))
transcriptData[transcriptData$學號=="edfeQ7fb8",] ->subsample
subsample
subsample$學期成績 >= 60 -> subsample$及格 # 1
總修習學分數=sum(subsample$學分數) # 2
總實得學分數=sum(subsample$學分數[subsample$及格]) #3
subsample%>%
mutate(
及格=學期成績>=60
) ->subsample
subsample%>%
summarise(
總修習學分數=sum(學分數)
總實得學分數=sum(學分數[subsample$及格])
subsample%>%
mutate(
及格=學期成績>=60
) ->subsample
#subsample%>%
summarise(
總修習學分數=sum(學分數)
總實得學分數=sum(學分數[subsample$及格])
subsample%>%
mutate(
及格=學期成績>=60
) ->subsample
knitr::opts_chunk$set(echo = TRUE)
library(dplyr); library(stringr); library(lubridate); library(purrr)
library(readr)
transcriptData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcript100_102.csv",
col_types = cols(
學期成績="n"
))
transcriptData[transcriptData$學號=="edfeQ7fb8",] ->subsample
subsample
subsample$學期成績 >= 60 -> subsample$及格 # 1
總修習學分數=sum(subsample$學分數) # 2
總實得學分數=sum(subsample$學分數[subsample$及格]) #3
subsample%>%
mutate(
及格=學期成績>=60
) ->subsample
#subsample%>%
summarise(
總修習學分數=sum(學分數)
總實得學分數=sum(學分數[subsample$及格])
subsample%>%
mutate(
及格=學期成績>=60
) ->subsample
subsample%>%
summarise(
總修習學分數=sum(學分數)
總實得學分數=sum(學分數[subsample$及格])
knitr::opts_chunk$set(echo = TRUE)
library(dplyr); library(stringr); library(lubridate); library(purrr)
library(readr)
transcriptData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcript100_102.csv",
col_types = cols(
學期成績="n"
))
transcriptData[transcriptData$學號=="edfeQ7fb8",] ->subsample
subsample
subsample$學期成績 >= 60 -> subsample$及格 # 1
總修習學分數=sum(subsample$學分數) # 2
總實得學分數=sum(subsample$學分數[subsample$及格]) #3
subsample%>%
mutate(
及格=學期成績>=60
) ->subsample
subsample%>%
summarise(
總修習學分數=sum(學分數)
總實得學分數=sum(學分數[subsample$及格])
subsample%>%
mutate(
及格=學期成績>=60
) ->subsample$及格
subsample%>%
summarise(
總修習學分數=sum(學分數)
總實得學分數=sum(學分數[subsample$及格])
subsample%>%
mutate(
及格=學期成績>=60
) ->subsample$及格
,
as.factor(subsample$學號) ->subsample$學號
subsample%>%
summarise(
總修習學分數=sum(學分數)
總實得學分數=sum(學分數[subsample$及格]),
transcriptData%>%
mutate(
系別=str_sub(學號,5,6)
) ->transcriptData
transcriptData%>%
mutate(
系別=str_sub(學號,5,6)
) ->transcriptData
subsample%>%
mutate(
及格=學期成績>=60
) ->subsample$及格
subsample %>%
summarise(
總修習學分數=sum(學分數)
總實得學分數=sum(學分數[subsample$及格])
knitr::opts_chunk$set(echo = TRUE)
library(dplyr); library(stringr); library(lubridate); library(purrr)
library(readr)
transcriptData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcript100_102.csv",
col_types = cols(
學期成績="n"
))
transcriptData[transcriptData$學號=="edfeQ7fb8",] ->subsample
subsample
subsample$學期成績 >= 60 -> subsample$及格 # 1
總修習學分數=sum(subsample$學分數) # 2
總實得學分數=sum(subsample$學分數[subsample$及格]) #3
subsample%>%
mutate(
及格=學期成績>=60
) ->subsample$及格
#subsample %>%
# summarise(
#    總修習學分數=sum(學分數)
#    總實得學分數=sum(學分數[subsample$及格])
#  )
as.factor(subsample$學號) ->subsample$學號
#subsample%>%
#  summarise(
#    總修習學分數=sum(學分數)
#    總實得學分數=sum(學分數[subsample$及格]),
#    學號=levels(subsample$學號)
#  )
transcriptData%>%
mutate(
系別=str_sub(學號,5,6)
) ->transcriptData
knitr::opts_chunk$set(echo = TRUE)
library(readr); library(dplyr); library(stringr); library(lubridate)
library(readr)
libraryData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/library100_102.csv")
libraryData %>%
filter(入學年 %>% between(100,102), 學院=="社會科學院")
a<-c(1:10)
typeof(a)
b<-list("a","b",1:10)
typeof(b)
b2<-list("a","b",1:10,
list(
"Mr Smith",
data.frame(
v1=c(1,2),
v2=c("aa","bb"),
stringsAsFactors = F
)
))
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
filmVotingData$請選擇你最喜歡的影片二部 %>%
str_split(", (?!(by))") -> filmVotingResult
#filmVotingResult
knitr::opts_chunk$set(echo = TRUE)
library(dplyr); library(stringr); library(lubridate); library(purrr)
classSurvey <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/classSurvey.csv")
classSurvey <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/classSurvey.csv")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr); library(stringr); library(lubridate); library(purrr)
classSurvey <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/classSurvey.csv")
classSurvey <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/classSurvey.csv")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr); library(stringr); library(lubridate); library(purrr)
classSurvey <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/classSurvey.csv")
?mutate
classSurvey <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/classSurvey.csv")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr); library(stringr); library(lubridate); library(purrr)
classSurvey <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/classSurvey.csv")
<-NA
<-NA
x<-NA
na2zero(x)=0
is_na<- function(hwGrades){
ifelse(NA)
}
is_hot(28)
is_na<- function(hwGrades){
ifelse(NA)
}
na2zero(x)=0
is_na<- function(hwGrades){
ifelse(NA)
}
?left_join
band_members %>% inner_join(band_instruments)
